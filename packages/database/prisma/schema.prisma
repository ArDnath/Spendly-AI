// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String?   // only if not using OAuth
  phoneNumber   String?   @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  apiKeys       APIKey[]
  alerts        Alert[]
  usages        Usage[]
}

model APIKey {
  id            String   @id @default(cuid())
  key           String   // encrypted at rest
  service       String   // e.g., "OpenAI", "Anthropic"
  description   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  usages        Usage[]
}

model Usage {
  id            String   @id @default(cuid())
  apiService    String   // e.g., "OpenAI"
  modelUsed     String
  inputTokens   Int
  outputTokens  Int
  cost          Float
  timestamp     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  apiKey        APIKey   @relation(fields: [apiKeyId], references: [id])
  apiKeyId      String
}

model Alert {
  id            String   @id @default(cuid())
  name          String
  threshold     Float    // max cost allowed
  frequency     String   // daily/weekly/monthly
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        String
}